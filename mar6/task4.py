"""4) Напишите программу, которая заполняет массив из N элементов случайными
целыми числами в диапазоне [ A , B ] и определяет номера двух элементов этого массива,
которые расположены ближе всех друг к другу на числовой оси. Эти элементы не
обязательно должны быть расположены рядом друг с другом. Если таких пар несколько,
нужно вывести номера элементов самой последней из таких найденных пар.
Входные данные
Входная строка содержит три числа: границы диапазона случайных чисел A и B , а также
размер массива N . Все числа разделены пробелами. Гарантируется, что 0 < N ≤ 10000 .
Выходные данные
В первой строке программа должна вывести N элементов построенного массива, разделив
их пробелами, а во второй строке – в порядке возрастания номера двух элементов массива,
которые расположены ближе всех друг к другу на числовой оси. Если таких пар
несколько, нужно вывести номера любой из таких найденных пар.
Примеры
входные данные
10 100 15
выходные данные
59 3 75 86 64 88 59 87 48 66 68 44 49 37 91
1 7"""

from random import randint


def fillarray(a, b, n):
    return [randint(int(a), int(b)) for _ in range(int(n))]


def findpair(arr):
    difference = abs(arr[0] - arr[1])
    indx = [0, 0]
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if abs(arr[i] - arr[j]) <= difference:
                indx[0] = i + 1
                indx[1] = j + 1
                difference = abs(arr[i] - arr[j])
    indx.sort()
    return indx


def check(num):
    tupple = num.split()
    if len(tupple) != 3:
        for i in tupple:
            if not i.isdigit():
                print("Одно или несколько значений в строке не число или не верный ввод!")
                return True
        print("Hе верный ввод!")
        return True
    return False


while True:
    value = input("Введите числа A, B, N через пробел: ")
    if check(value): continue
    array = fillarray(*value.split())
    print(*array)
    indx = findpair(array)
    print(*indx)
    break
