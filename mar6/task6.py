"""*6) Пара элементов в массиве называется симметричной, если эти элементы находятся на
одинаковом расстоянии от концов массива. Так в массиве размером N симметричными
будут пары элементов с порядковыми номерами 1 и N , 2 и N - 1 и т.д. (при нумерации с
единицы). Напишите программу, которая заполняет массив из N элементов случайными
целыми числами в диапазоне [ A , B ] и определяет номера двух симметричных элементов
этого массива, сумма которых чётная и максимальная среди всех пар симметричных
элементов. Если ни одной такой пары нет, нужно вывести два нуля. Если есть несколько
таких пар, нужно вывести номера элементов, составляющих пару, ближайшую к центру
массива.
Входные данные:
Входная строка содержит три числа: границы диапазона случайных чисел A и B , а также
размер массива N . Все числа разделены пробелами. Гарантируется, что 0 < N ≤ 10000 .
Выходные данные:
В первой строке программа должна вывести N элементов построенного массива, разделив
их пробелами, а во второй строке – номера двух симметричных элементов массива,
имеющих максимальную чётную сумму. Если ни одной такой пары нет, нужно вывести
два нуля.
Примеры
входные данные
10 20 10
выходные данные
10 10 19 12 13 17 13 11 14 14
5 6
"""

from random import randint
import sys


def fillarray(a, b, n):
    return [randint(int(a), int(b)) for _ in range(int(n))]


def maxpair(arr):
    indx = [0, 0]
    maximum = -sys.maxsize - 1
    for i in range(len(arr) // 2):
        if (arr[i] + arr[-i - 1]) % 2 == 0:
            if arr[i] + arr[-i - 1] > maximum:
                maximum = arr[i] + arr[-i - 1]
                indx = [i + 1, len(arr) - i]
    return indx


def check(num):
    tupple = num.split()
    if len(tupple) != 3:
        for i in tupple:
            if not i.isdigit():
                print("Одно или несколько значений в строке не число или не верный ввод!")
                return True
        print("Hе верный ввод!")
        return True
    return False


while True:
    value = input("Введите числа A, B, N через пробел: ")
    if check(value): continue

    array = fillarray(*value.split())
    print(*array)
    print(*maxpair(array))
    break
